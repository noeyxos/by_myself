CSS 필기.TXT
■ CSS 사용하는 이유
	(1)표현할 수 있는 스타일이 다양하고,세분화 되어있다.
	-(CSS3) 동적인 요소의 표현까지 가능해짐.
	(2)구조와 스타일을 분리하여 작성할 수 있다.
	
■ css의 다양한 정의방법(p161~p165) = 어디에다 작성하는가!
	(1)css파일: 연결하는 모든 웹문서가 스타일 공유
	-HTML문서 안에서는 <link>태그를 사용하여 연결
	-css안에서는 @import url("주소");를 사용하여 연결
	(2)<style>태그:해당 문서 안에서 여러요소가 스타일을 공유
	(3)style속성(인라인스타일):해당 요소에만 스타일을 적용함.
	
■ 셀렉터(=선택자)의 기본유형(p169~171)
	셀렉터:CSS에서 대상을 구성하는 요소
	(1)태그셀렉터:해당 태그를 대상으로 스타일 부여
	(2)아이디셀렉터(#아이디명):아이디를 대상으로 스타일 부여
	-id 속성은 중복불가이다. 문서 안에서 동일한 아이디값을 가지는 요소가 있으면 안된다.
	(3)클래스셀렉터(.클래스명):클래스를 대상으로 스타일 부여
	-class속성은 id속성과 다르게, 중복부여가 가능하고, 여러 값을 가지는 다중부여도 가능하다.
	
	※아이디명,클래스명 부여시 주의사항
	①숫자로 시작하면 안되고, 숫자로만 되어 있어도 안된다.
	②클래스의 다중부여를 경우를 제외하고, 띄어쓰면 안된다.
	
■ 박스모델(p184)
	html태그는 네모난 사각형 박스로 다루어진다.
	[박스의 구성]
	(1)content 영역 : 태그안, 내용을 작성하는 곳(텍스트나 또다른 태그)
	-width속성과 height속성에 의해 크기조절됨.
	(2)padding 영역 : 내부여백(or영역의 확장)
	-background만 표현됨.
	(3)border 영역 : 테두리
	(4)margin 영역 : 외부여백(or상대적 위치)
	-상대적 위치로 해석이 가능한 이유:마이너스값이 사용가능
	
■CSS우선순위:스타일의 적용순서
	:우선순위가 높다=최종적으로 적용되는 스타일을 나타냄.
	(1)작성방식 상관없이,작성순서가 나중에 작성된 스타일이 우선순위가 높다.
	(2)1번보다, 대상을 구성하는 셀렉터의 수가 더 많은 쪽이 우선순위가 높다.
	(3)태그셀렉터보다 클래스셀렉터가,클래스셀렉터보다 아이디셀렉터가 우선순위가 높다. 
	(4)인라인스타일이 우선순위가 가장 높다.
	※[!important]속성값:해당 속성값이 속성에 추가되면, 우선순위를 무시하고, 해당 스타일을 강제할 수 있다.

■기본 배치방식(진열방식)-p213
	1.block태그:사이트의 구조를 만들때 사용 
	=div,h1~h6,p,ul,ol,li,dl,dt,dd,hr,form
	header,main,footer,nav,aside,section,article,address
	(1)수직정렬
	(2)width속성과 height속성을 사용하여 크기조절이 가능함.
	(3)기본크기:너비는 부모와 같고,높이는 내용만큼 설정된다.
		
	2.inline태그:텍스트나 내용을 감싸는 태그
	=span,a,strong,em,i,(b,small,del,ins,sup,sub,mark)-p72
	,label
	(1)수평정렬
	(2)width속성과 height속성을 사용하여 크기조절이 불가능함.
	(3)기본크기:너비는 내용만큼,높이는 글자크기(font-size)만큼 설정된다.
	(4)태그안에서 줄바꿈도 가능하고,공백(띄어쓰기)를 인식함.=글자와 같은 취급
	(5)블록요소를 감쌀수 없다.(=블럭요소의 부모(조상)요소가 될 수 없다.)
	(6)margin-top과 margin-bottom은 적용안됨.
	(7)padding-top과 padding-bottom은 영향을 미치는 범위는 추가되지만,
		구조에는 영향을 주지 않는다.(다른 태그들이 인식하지 않는다.)
	
	3.inline-block태그:내용에 해당하는 태그
	=img,iframe,video,audio,input,textarea,select,button
	(1)수평정렬
	(2)width속성과 height속성을 사용하여 크기조절이 가능함.
	(3)기본크기:너비는 내용만큼,높이는 내용만큼, 최소 행높이(line-height)만큼 설정된다.
	(4)공백(띄어쓰기)를 인식함.
	(5)블록요소를 감쌀 수 있다.
	
■ 블록요소를 수평정렬하는 방법
	1.display:inline; (:inline-block;)
		[유의사항]
		(1)크기조절이 안됨, margin과 padding이 적용안됨(inline만 해당)
		(2)공백(띄어쓰기) 인식함.
		(3)추가적으로 수평정렬되는 수직위치를 조정해 줄 필요가 있다.
	2.float:left; (:right;)-p222
		[유의사항과 특징]
		(1)가운데 정렬이 안됨.
		(2)block요소가 float 적용된 요소들을 인식하지못함 - ★
		[float요소 인식시키는 방법]
		Case1)float요소 다음에 오는 block요소
			:clear속성을 사용하여 float효과를 지운다.(float요소를 인식시킨다.)
		Case2)float요소를 감싸는 부모 block요소
			①부모요소에게도 float를 설정하거나, display를 inline-block으로 설정 -부모가 수평할때만
			②강제적으로 필요한 만큼의 높이값을 부여함.
			③
			④
		
		
		※clear:both;(:left,:right)
		:선행되는 float효과를 지운다.(이전 요소와 같이 수평정렬 되지 않는다.)
		
■ 가상클래스(:)-p173
	:특정한 행위나 상태에 따라 스타일을 부여할 수 있게 함.(=유사클래스라고도 함.)
	□ 자식요소 가상 클래스
	:first-child{첫번째 자식요소에게 스타일을 부여함.}
	:last-child{마지막 자식요소에게 스타일을 부여함.}
	:nth-child(♠){♠번째 자식요소에게 스타일을 부여함.}
	:nth-child(♠n){♠의 배수번째 자식요소에게 스타일 부여함.}
		예)li:nth-child(3n){3,6,9,12,15..번째 자식인 li에게 스타일을 부여함.}
	:nth-child(♠n+♥){♥번째부터 ♠의 배수로 증가하는 자식요소에게...}
		예)p:nth-child(4n+3){3,7,11,15,19..번째 자식인 p...}
	:nth-child(odd){홀수번째 자식요소에게 스타일 부여함.}
	:nth-child(even){짝수번째 자식요소에게 스타일 부여함.}
	
	※'n'은 0부터 시작한 자연수가 대입된다.
	※ ♠, ♥ 은 양의 정수(숫자)만 입력한다.
	
	□ 링크와 마우스 동작에 의한 가상클래스
	a:link{링크가 설정된 경우, 스타일을 부여}
	a:visited{방문한 링크인 경우, 스타일을 부여}
	a:focus{탭에 의해 선택된 경우, 스타일을 부여}
	a:hover{마우스를 올렸을 때, 스타일을 부여}
	a:active{클릭하는 순간, 스타일을 부여}
	※[:link],[:visited]는 링크가 설정된 a태그에만 적용 
	※[:focus]는 링크가 설정된 a태그와 폼요소에 적용
	※[:hover],[:active]는 다른 태그에서도 적용가능함.

	input:checked{ 체크박스나 라디오버튼에 체크된 상태인 경우 스타일 적용}
	
	
	
	
■ 가상요소(::)=유사요사
	:태그로 존재하지 않는 형태나 대상에 스타일을 부여함.
	대상::before{ 대상이 첫번째 자식보다 앞에 영역을 생성함.}
	대상::after{ 대상이 마지막 자식보다 뒤에 영역을 생성함.}
	※::before, ::after는 반드시, content속성이 존재해야한다.
	※::before, ::after는 inline형태를 가진다. 

::placeholder{입력폼에 나타나는 placeholder값을 스타일링함.}

■ 박스(요소)의 배치 기준 설정하기 (p217)
position: 요소(=태그)의 위치를 지정하는 방식(기준)을 설정함.
	:static; (기본값 = 모든 태그가 기본으로 설정된 상태)
		-block요소는 수직정렬, inline요소는 수평정렬(normal flow)
	:absolute; 상위포지션을 기준으로 하여 위치가 지정되고, 
		상위포지션이 없는 경우,화면을 기준으로 위치가 지정된다.
	:relative; 기본위치(원래위치)를 기준으로 위치가 지정됨.
		주로,상위포지션의 용도로 많이 사용됨.
	:fixed; 화면을 기준으로 위치가 지정되고, 화면에 고정된다.
	:sticky; 영역이 화면위로 넘어가게 되면, 화면에 고정된다.
		(그나마,최근에 생성된 스타일 - 잘 사용되지않음.)
	
※'static'을 제외한 다른 설정인 경우, 위치를 지정하는 속성이 필요함.
	- 위치를 지정하는 속성:[top],[left],[right],[bottom]
※영역의 겹쳐진 순서는 [z-index]속성을 사용하여, 제어할 수 있다.	
※상위포지션이란:상위요소(조상요소)중에서 "static"을 제외한 포지션이 설정된 가장 가까운 요소

■ 각도의 단위 
(1)deg : 육십분법(360deg = 1회전)-★
(2)grad: 그레이드법(400grad = 1회전)
(3)rad:호도법(2π rad = 1회전)
(4)turn:회전(1turn = 1회전)


■ 속성셀렉터 -p173
	[속성]{해당속성을 지닌 요소들이 스타일 대상이 됨.}
	[속성="값"]{해당속성의 속성값을 지닌 요소가 스타일 대상이 됨.}
	[속성^="값"]{해당속성의 속성값이 "값"으로 시작하는 요소가 스타일 대상이 됨.}
	[속성$="값"]{해당속성의 속성값이 "값"으로 끝나는 요소가 스타일 대상이 됨.}
	[속성*="값"]{해당속성의 속성값이 "값"으로 포함하는 요소가 스타일 대상이 됨.}
	
	
	(예시)
	<??? type="?????"></???>
	[type]{"type"속성을 가진 요소가 스타일을 적용받음}
	
	<??? name="no"></???>
	[name="no"]{name속성의 속성값이 "no"인 경우, 스타일 적용}
	
	<??? href="img/커피.hmtl"><???>
	<??? href="imgbox.css"></???>
	[href^="img"]{href속성의 속성값이 "img"로 시작해야함.}